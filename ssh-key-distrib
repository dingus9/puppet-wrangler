#!/bin/bash
## Users must have sudo rights to use this file to deploy to users other then themselves.
tmp=$(echo "$@"|grep -Eo '(-u|--user)=[A-Za-z0-9_\-]+'| grep -Eo '=[A-Za-z0-9_\-]+'|grep -Eo '[A-Za-z0-9_\-]+')
[ -n "$tmp" ] && ssh_user=$tmp || ssh_user=$USER;

tmp=$(echo "$@"|grep -Eo '(-U|--tgt_user)=[A-Za-z0-9_\-]+'| grep -Eo '=[A-Za-z0-9_\-]+'|grep -Eo '[A-Za-z0-9_\-]+')
[ -n "$tmp" ] && tgt_user=$tmp || tgt_user=$USER;

tmp=$(echo "$@"|grep -Eo '(-k|--key)=([A-Za-z0-9_./-]+|".+")'| grep -Eo '=([A-Za-z0-9_./-]+|".+")'|grep -Eo '([A-Za-z0-9_ ./-]+)')
[ -n "$tmp" ] && keyfile="$tmp" || keyfile="~/.ssh/id_rsa";

tmp=$(echo "$@"|grep -Eo '(-H|--host)=([A-Za-z0-9_\/\-\.]+|".+")'| grep -Eo '=([A-Za-z0-9_\/\-\.]+|".+")'|grep -Eo '([A-Za-z0-9_\/\-\.]+|".+")')
[ -n "$tmp" ] && host=$tmp || host='';

tmp=$(echo "$@"|grep -Eo '(-o|--opts)=([A-Za-z0-9_\/\-\.]+|".+")'| grep -Eo '=([A-Za-z0-9_\/\-\.]+|".+")'|grep -Eo '([A-Za-z0-9_\/\-\.]+|".+")')
[ -n "$tmp" ] && id_cmd=$tmp || id_cmd='';

tmp=$(echo "$@"|grep -Eo '(-s|--sudo)')
[ -n "$tmp" ] && sudo='sudo' || sudo='';

tmp=$(echo "$@"|grep -Eo '(-h|--help)')
[ -n "$tmp" ] && help='true' || help='';

tmp=$(echo "$@"|grep -Eo '(-D|--delete)')
[ -n "$tmp" ] && delete='true' || delete='false';

tmp=$(echo "$@"|grep -Eo '(-M|--master)')
[ -n "$tmp" ] && master='true' || master='false';

function usage {
echo -e "$1Usage: ssh-key-distrib -H|--host=example.com [-u|--user=user -U|--tgt_user=TargetUser -k|--key=keyfile -o|--opts=\"ssh options\" -s|--sudo"
echo -e '-H,--host\tSpecify the host to copy key to.
-u,--user\tSpecify the user to connect as.
-U,--tgt_user\tSpecify the target user on the host system.
-k,--key\tSpecify the keyfile to read and copy to authorized_keys2 on the host. Paths with spaces should be formated like \"/Path\ To\ File/\".
-o,--opts\tAdd extra ssh options here.
-s,--sudo\tUse sudo on the server side to copy keys to alternate user(-u user must have sudo on host.)
-D,--delete\tDelete key from specified host.
-h,--help\tThis help message.';
exit 1;
}

[ -n "$help" ] && usage || t=1;

if [ -z "$host" ]; then
  usage "-h|--host is required:\n"
fi

if [ "$sudo" == 'sudo' ] && [ "$tgt_user" != "$ssh_user" ]; then
  sudo_cmd="sudo -u $tgt_user";
  id_cmd="$id_cmd -t -q"
else
  sudo_cmd='';
fi

# load key into $key
if [ "$master" == 'true' ]; then
  if [ $(echo "$kefile" | grep -q '.pub') $? -eq 1 ] && [ -f "$keyfile" ]; then
    key=$(cat "$keyfile");
  fi
else
  if [ $(echo "$kefile" | grep -q '.pub') $? -eq 0 ] && [ -f "$keyfile" ]; then
    key=$(cat $keyfile);
  elif [ -f "$keyfile.pub" ]; then
    key=$(cat "$keyfile.pub");
  else
    echo "Can't find keyfile for $keyfile";
    exit 1;
  fi
fi

if [ "$delete" == 'true' ]; then
  #delete mode
  if [ "$master" == 'true' ]; then
    keyname=$(basename $keyfile);
    ssh $id_cmd $ssh_user@$host "$sudo_cmd bash -c 'rm ~$tgt_user/.ssh/$keyname'"
    echo "Removed key $keyname in $tgt_users .ssh/ directory";
  else
    ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c '[ -f ~$tgt_user/.ssh/authorized_keys2 ] && exit 0 || exit 1'";
    if [ $? -gt 0 ]; then
      echo "No authorized_keys2 file for user ~$tgt_user";
    else
    ## this line assumes bash on the target machine.
      cmd="LINES=\$(grep -n \"$key\" ~$tgt_user/.ssh/authorized_keys2 | grep -Ev \"[0-9]+:#\"|grep -oE \"^[0-9]+\");
LINES=\$(echo -e \$LINES | tr \"\n\" \";\" | sed \"s/;$//\");
sed -i \"\${LINES}d\" ~$tgt_user/.ssh/authorized_keys2";
      ssh $id_cmd $ssh_user@$host "$sudo_cmd bash -c '$cmd'"
      echo "Removed entry in $tgt_user's .ssh/authorized_keys2 file";
      exit 0;
    fi
  fi
else
  ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c '[ -d ~$tgt_user/.ssh ] && echo -n '' || mkdir ~$tgt_user/.ssh'";
  
  if [ "$master" == 'true' ]; then
  #master key copy
    keyname=$(basename $keyfile);
    ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c 'echo \"$key\" > ~$tgt_user/.ssh/$keyname;chmod 600 ~$tgt_user/.ssh/$keyname;'";
    echo "Added private(master) key \"$keyname\" in $tgt_user's .ssh/ directory";
  else
    ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c 'touch ~$tgt_user/.ssh/authorized_keys2;[ \`grep -q \"$key\" ~$tgt_user/.ssh/authorized_keys2\` \$? -ne 0 ] && echo \"$key\" >> ~$tgt_user/.ssh/authorized_keys2;'";
    echo "Added public key entry in $tgt_user's .ssh/authorized_keys2 file.";
    ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c 'chmod 744 ~$tgt_user/.ssh;chmod 600 ~$tgt_user/.ssh/authorized_keys2'";
  fi
fi

# ssh $id_cmd $ssh_user@$host "$sudo_cmd /bin/bash -c 'cat ~$tgt_user/.ssh/authorized_keys2'";